---
openapi: 3.0.1
info:
  title: Inkwell Blog API
  version: v1
paths:
  "/api/v1/posts":
    get:
      summary: list posts
      tags:
      - Post
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/posts":
    post:
      summary: create post
      tags:
      - Post
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Facere itaque ipsa sunt.
                    content:
                      type: string
                      example: Qui officiis officia. Laboriosam quae quaerat. Consequatur
                        officiis a.
                    slug:
                      type: string
                      example: Illum non est vel.
              required:
              - post
    get:
      summary: list posts
      tags:
      - Post
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v1/users/{user_id}/posts/{id}":
    get:
      summary: show post
      tags:
      - Post
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
    put:
      summary: update post
      tags:
      - Post
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '205':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post:
                  type: object
                  properties:
                    title:
                      type: string
                      example: Quis qui ipsa et.
                    content:
                      type: string
                      example: Ullam ipsa sit. Voluptatum id aliquid. Necessitatibus
                        eveniet doloremque.
                    slug:
                      type: string
                      example: Neque eius recusandae impedit.
              required:
              - post
    delete:
      summary: delete post
      tags:
      - Post
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: successful
  "/api/v1/signup":
    post:
      summary: create user
      tags:
      - User
      parameters: []
      responses:
        '201':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      example: jospeh
                    email:
                      type: string
                      example: gillian@medhurst.biz
                    password:
                      type: string
                      example: '123456'
                    password_confirmation:
                      type: string
                      example: '123456'
              required:
              - user
  "/api/v1/login":
    post:
      summary: login user
      tags:
      - User
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: ha.willms@friesen.name
                    password:
                      type: string
                      example: '123456'
              required:
              - user
  "/api/v1/users":
    get:
      summary: list users
      tags:
      - User
      responses:
        '200':
          description: successful
  "/api/v1/users/{id}":
    get:
      summary: show user
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
    patch:
      summary: update user
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '205':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      example: marc
                    email:
                      type: string
                      example: gail.stanton@carter.com
                    password:
                      type: string
                      example: '123456'
                    password_confirmation:
                      type: string
                      example: '123456'
              required:
              - user
    put:
      summary: update user
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '205':
          description: successful
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    username:
                      type: string
                      example: burl.tillman
                    email:
                      type: string
                      example: josefine_shields@gerlach.name
                    password:
                      type: string
                      example: '123456'
                    password_confirmation:
                      type: string
                      example: '123456'
              required:
              - user
    delete:
      summary: delete user
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '204':
          description: successful
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000/
